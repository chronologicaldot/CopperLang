===========
2017/5/4

intmath.cpp
- Added AreZero to list of functions added in addFunctionsToEngine();
- Removed excessive code from Create::call().
- Moved saving of first value outside loop of AreEqual::call().

ulongmath.cpp
- Added AreZero to list of functions added in addFunctionsToEngine();
- Removed excessive code from Create::call().
- Moved saving of first value outside loop of AreEqual::call().

floatmath.h, floatmath.cpp, doublemath.h, doublemath.cpp
- Commented out / declared obsolete

BasicPritive.h
- Fixed bug in TwoArgBase: methods were not const, and therefore did not override originals.


===========
2017/5/3-4

intmath.cpp
- Changed IsZero::call() by removing excessive code and making it loop over parameters.
- Changed IsZero to AreZero, made it variadic, and removed getParameterType() and getParameterCount() methods.
- Fixed bug in Divide::call() that checked if total >= 0 and made it total > 0.

ulongmath.cpp
- Changed IsZero::call() by removing excessive code and making it loop over parameters.
- Changed IsZero to AreZero, made it variadic, and removed getParameterType() and getParameterCount() methods.
- Removed excessive code from ULong::getAsUnsignedInt().
- Fixed bug in Divide::call() that checked if total >= 0 and made it total > 0.
- Removed excessive code from Divide::call().

timemath.cpp
- Removed excessive MSecTime from Add::call().


===========
2017/4/30

- Added static ObjectType::Value BasicPrimitive::StaticType().
- Modified BasicPrimitive to set a basic object type value from StaticType().
- Added inline bool isBasicPrimitive().
- Changed TwoArgBase::getParameterName() to TwoArgBase::getParameterType() and set it to return BasicPrimitive::StaticType().
- Changed isObjectInt() to use isBasicPrimitive().
- Changed getInt() to use isBasicPrimitive() and isObjectNumber().
- Changed Int::Create::call() to use isObjectNumber().
- Changed Int::IsZero::call() to use isObjectNumber().
- Changed Int::Get_abs::call() to return BasicPrimitive::StaticType().
- Changed isObjectULong() to use isBasicPrimitive().
- Changed getULong() to use isBasicPrimitive() and isObjectNumber().
- Changed ULong::Create::call() to use isObjectNumber().
- Changed ULong::IsZero::call() to use isObjectNumber().
- Changed ULong::Get_abs::call() to return BasicPrimitive::StaticType().
- Changed ManagedList.h to use the new type system (including adding List::StaticType() and Iter::StaticType()).
- Changed timemath.h to use the new type system.
- Added #define CU_MS_TIME_H check to the beginning of timemath.h.

- Created ExtTypeValues.h (used in BasicPrimitive.h and ManagedList.h).


===========
2017/4/10-13,23-25

- Rewrote timemath.h and timemath.cpp functions as structs implementing Cu::ForeignFunc.
-- Create
-- ToNumber
-- Add
-- Subtract
-- ClockTime

- Rewrote BasicPrimitiveSizes.h and BasicPrimitiveSizes.cpp functions as struct implementing Cu::ForeignFunc.
- Replaced BASIC_PRIMITIVE_TYPENAME with BasicPrimitive::StaticTypeName().

- Rewrote intmath.h and intmath.cpp functions.
- Rewrote ulongmath.h and ulongmath.cpp functions.
- Rewrote ManagedList.h and ManagedList.cpp functions.

BasicPrimitive.h
- Replaced inheritance from Number with inheritance from Object.


===========
2017/2/12

intmath/
- Added max(), min(), and abs().
ulongmath/
- Added max(), min(), and abs().
floatmath/
- Added max(), min(), abs(), ceiling(), and floor().
doublemath/
- Added max(), min(), abs(), ceiling(), and floor().
